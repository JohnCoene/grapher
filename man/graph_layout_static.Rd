% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layout.R
\name{graph_layout_static}
\alias{graph_layout_static}
\alias{graph_static_layout}
\title{Layout Static}
\usage{
graph_static_layout(
  g,
  method = igraph::layout_nicely,
  dim = 3,
  scaling = c(-200, 200),
  weights = NULL,
  ...
)

graph_layout_static(
  g,
  method = igraph::layout_nicely,
  dim = 3,
  scaling = c(-200, 200),
  weights = NULL,
  ...
)
}
\arguments{
\item{g}{An object of class \code{graph} as 
returned by \code{\link{graph}} or a \code{graph_proxy}
as returned by a function of the same name.}

\item{method}{The igraph function to compute node positions.}

\item{dim}{Number of dimensions to use, passed to \code{method}.}

\item{scaling}{A vector or 2 values defining the output range to
rescale the coordinates, set \code{NULL} to not use any scaling.
The layout can also be later rescaled with \code{\link{rescale_layout}}.}

\item{weights}{Bare column name of links weight if \code{NULL}
no weight is taken into account.}

\item{...}{Any other argument to pass to \code{method}.}
}
\description{
Layout the graph given using an igraph algorithm rather 
than the built-in force layout.
}
\note{
This function will overwrite \code{x}, \code{y}, \code{z} variables 
previously passed to \code{\link{graph_nodes}}.
}
\examples{
graph_data <- make_data(200)

g <- graph(graph_data)

# layout without scaling
graph_layout_static(g, scaling = NULL)

# layout with scaling
graph_layout_static(g)

# layout with weight
graph_layout_static(g, method = igraph::layout_with_fr, weight = weight)

}
\seealso{
\code{\link{graph_layout_offline}} to compute the same layout as
\code{\link{graph_layout_live}} but in R rather than in the browser. 
\code{\link{rescale_layout}} to rescale the layout, similar to \code{scaling}
argument.
}
